// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int           @id @default(autoincrement())
  email             String        @unique
  hash              String
  firstName         String
  lastName          String
  role              Role
  vertificationCode String?       @default(uuid())
  passwordResetCode String?
  verified          Boolean       @default(false)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  // status Status @default(ACTIVE)
  appointments      Appointment[]

  @@map("users")
}

model Appointment {
  id                Int               @id @default(autoincrement())
  User              User              @relation(fields: [userId], references: [id])
  userId            Int
  date              String
  doctorId          Int
  time              String
  statusAppointment StatusAppointment @default(PENDING)

  status      Status      @default(ACTIVE)
  Diagnostics Diagnostic?

  @@map("appointments")
}

model Diagnostic {
  id               Int               @id @default(autoincrement())
  appointment      Appointment       @relation(fields: [appointmentId], references: [id])
  appointmentId    Int               @unique
  name             String
  description      String
  status           Status            @default(ACTIVE)
  diagnosticInImgs DiagnosticInImg[]

  @@map("diagnostics")
}

model Img {
  id     Int    @id @default(autoincrement())
  url    String
  status Status @default(ACTIVE)

  diagnosticInImgs DiagnosticInImg[]

  @@map("imgs")
}

model DiagnosticInImg {
  id           Int        @id @default(autoincrement())
  diagnosticId Int
  imgId        Int
  status       Status     @default(ACTIVE)
  Img          Img        @relation(fields: [imgId], references: [id])
  Diagnostics  Diagnostic @relation(fields: [diagnosticId], references: [id])

  @@map("diagnostic_in_imgs")
}

enum Role {
  SUPERADMIN
  ADMIN
  DOCTOR
  PATIENT
}

enum StatusAppointment {
  PENDING
  APPROVED
  CANCELED
  COMPLETED
}

enum Status {
  ACTIVE
  INACTIVE
}
